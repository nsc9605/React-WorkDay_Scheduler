{"version":3,"sources":["components/Tasks.js","App.js","index.js"],"names":["Tasks","useState","hoursOfDay","setHoursOfDay","DateTime","now","currentTime","input","useRef","handleFormSubmit","e","i","preventDefault","forEach","each","date","hour","localStorage","setItem","String","task","useEffect","console","log","displayHour","getItem","push","set","minutes","determinePastPresentFuture","className","toLocaleString","DATETIME_MED_WITH_WEEKDAY","map","index","onSubmit","name","TIME_SIMPLE","ref","value","type","placeholder","id","onChange","target","saveNewHours","handleInputChange","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"8MAoHeA,MAhHf,WAAiB,MAEqBC,mBAAS,IAF9B,mBAERC,EAFQ,KAEIC,EAFJ,OAGOF,mBAASG,WAASC,OAAjCC,EAHQ,oBAMTC,EAAQC,mBAmCd,SAASC,EAAiBC,EAAGC,GAC3BD,EAAEE,iBAEFV,EAAWW,SAAQ,SAACC,GACdH,EAAI,IAAMG,EAAKC,KAAKC,MAEtBC,aAAaC,QAAQC,OAAOR,EAAI,GAAIG,EAAKM,SAtC/CC,qBAAU,WACRC,QAAQC,IAAI,SAEZ,IADA,IAAIrB,EAAa,GACRS,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAE3B,IAAIa,EAAcP,aAAaQ,QAAQN,OAAOR,IAC9CT,EAAWwB,KAAK,CACdX,KAAMX,WAASC,MAAMsB,IAAI,CAAEX,KAAML,EAAGiB,QAAS,IAC7CR,KAAMI,GAA4B,KAGtCrB,EAAcD,EAAYsB,GAC1BF,QAAQC,IAAIjB,KACX,CAACA,IA8BJ,IAAMuB,EAA6B,SAACf,GAClC,OAAIR,EAAYU,OAASF,EAAKC,KAAKC,KAC1B,UAELV,EAAYU,KAAOF,EAAKE,KACnB,OAEA,UAKX,OACE,gCACE,sBAAKc,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,oBAAIA,UAAU,OAAd,gEAGA,4CACa,IAEVxB,EAAYyB,eAAe3B,WAAS4B,2BAA4B,UAIpE9B,EAAW+B,KAAI,SAACnB,EAAMoB,GACrB,OACE,qBAAKJ,UAAU,YAAf,SACE,uBAAiBK,SAAU1B,EAA3B,UACE,uBAAOqB,UAAU,OAAOM,KAAK,OAA7B,SAEGtB,EAAKC,KAAKgB,eAAe3B,WAASiC,eAErC,0BAEEC,IAAK/B,EACLgC,MAAOzB,EAAKM,KACZU,UAAWD,EAA2Bf,GACtC0B,KAAK,OACLC,YAAY,kBACZC,GAAG,aACHC,SAAU,SAACjC,GAAD,OAtExB,SAA2BA,EAAGC,GAC5B,IAAMS,EAAOV,EAAEkC,OAAOL,MAEhBM,EAAe3C,EAAW+B,KAAI,SAACnB,GACnC,OAAIH,EAAI,IAAMG,EAAKC,KAAKC,KACf,2BACFF,GADL,IAEEM,KAAM,CAACA,KAGJN,KAETX,EAAc0C,GACdvB,QAAQC,IAAIsB,GAyDiBC,CAAkBpC,EAAGwB,MAExC,yBACEM,KAAK,SACLV,UAAU,UACViB,QAAS,SAACrC,GAAD,OAAOD,EAAiBC,EAAGwB,IAHtC,iBAME,mBAAGJ,UAAU,0BArBNhB,Y,KCxERkC,MARf,WACE,OACE,8BACE,cAAC,EAAD,O,MCFNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.995c6e0f.chunk.js","sourcesContent":["import \"../styles/Tasks.css\";\nimport { DateTime } from \"luxon\";\nimport React, { useEffect, useState, useRef } from \"react\";\n\nfunction Tasks() {\n  // set variables for useEffect args\n  const [hoursOfDay, setHoursOfDay] = useState([]);\n  const [currentTime] = useState(DateTime.now());\n  // const [saveNewHours] = useState()\n  // const [task, setTask] = useState();\n  const input = useRef();\n\n  // Set loop to show specific ours of the day\n  useEffect(() => {\n    console.log(\"hello\");\n    var hoursOfDay = [];\n    for (let i = 8; i < 18; i++) {\n      // Push the hours desired to display on page and what format\n      var displayHour = localStorage.getItem(String(i));\n      hoursOfDay.push({\n        date: DateTime.now().set({ hour: i, minutes: 0 }),\n        task: displayHour ? displayHour : \"\",\n      });\n    }\n    setHoursOfDay(hoursOfDay, displayHour);\n    console.log(currentTime);\n  }, [currentTime]);\n  // Function to handle change in task and send to localStorage\n  function handleInputChange(e, i) {\n    const task = e.target.value;\n    // Loop through each time new task to save each task with hour in localStorage\n    const saveNewHours = hoursOfDay.map((each) => {\n      if (i + 8 === each.date.hour) {\n        return {\n          ...each,\n          task: [task],\n        };\n      }\n      return each;\n    });\n    setHoursOfDay(saveNewHours);\n    console.log(saveNewHours);\n  }\n\n  // Function to handle form when button is clicked\n  function handleFormSubmit(e, i) {\n    e.preventDefault();\n    // Loop through forEach task input in the handleInputChange function and save the task associate with the correct hour\n    hoursOfDay.forEach((each) => {\n      if (i + 8 === each.date.hour) {\n        // Save each task associated with that hour to localStorage\n        localStorage.setItem(String(i + 8), each.task);\n      }\n    });\n  }\n  // Sets change in color depending on local time\n  const determinePastPresentFuture = (each) => {\n    if (currentTime.hour === each.date.hour) {\n      return \"present\";\n    }\n    if (currentTime.hour < each.hour) {\n      return \"past\";\n    } else {\n      return \"future\";\n    }\n  };\n\n  // Return elements to page\n  return (\n    <div>\n      <div className=\"jumbotron\">\n        <h1 className=\"display-3\">Work Day Scheduler</h1>\n        <h2 className=\"lead\">\n          A simple calendar app for scheduling your work day\n        </h2>\n        <h3>\n          Currently:{\" \"}\n          {/* Set current time to display on page using Luxon documentation */}\n          {currentTime.toLocaleString(DateTime.DATETIME_MED_WITH_WEEKDAY)}{\" \"}\n        </h3>\n      </div>\n      {/* Map out the hours of day  */}\n      {hoursOfDay.map((each, index) => {\n        return (\n          <div className=\"container\">\n            <form key={each} onSubmit={handleFormSubmit}>\n              <label className=\"hour\" name=\"hour\">\n                {/* add in .date to display in non-military time */}\n                {each.date.toLocaleString(DateTime.TIME_SIMPLE)}\n              </label>\n              <textarea\n                // associate any value submitted through each.task\n                ref={input}\n                value={each.task}\n                className={determinePastPresentFuture(each)}\n                type=\"text\"\n                placeholder=\"Enter Task Here\"\n                id=\"time-block\"\n                onChange={(e) => handleInputChange(e, index)}\n              ></textarea>\n              <button\n                type=\"submit\"\n                className=\"saveBtn\"\n                onClick={(e) => handleFormSubmit(e, index)}\n              >\n                Save\n                <i className=\"fas fa-save save\"></i>\n              </button>\n            </form>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Tasks;\n","import React from \"react\";\nimport Tasks from \"./components/Tasks\";\nimport \"./styles/index.css\";\nimport \"./styles/Tasks.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Tasks />\n    </div>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}