{"version":3,"sources":["components/Tasks.js","App.js","index.js"],"names":["Tasks","useState","hoursOfDay","setHoursOfDay","DateTime","now","currentTime","setTask","input","useRef","handleInputChange","e","task","target","value","localStorage","setItem","hour","JSON","stringify","handleFormSubmit","i","preventDefault","getItem","DATE_SIMPLE","useEffect","console","log","push","set","minutes","setState","determinePastPresentFuture","each","className","toLocaleString","DATETIME_MED_WITH_WEEKDAY","map","index","onSubmit","name","TIME_SIMPLE","ref","type","placeholder","id","onChange","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"uMA0GeA,MArGf,WAAkB,IAAD,SAEqBC,mBAAS,IAF9B,mBAERC,EAFQ,KAEIC,EAFJ,OAGOF,mBAASG,WAASC,OAAjCC,EAHQ,sBAISL,qBAJT,mBAIFM,GAJE,WAKTC,EAAQC,mBAoBd,SAASC,EAAkBC,GACzB,IAAMC,EAAOD,EAAEE,OAAOC,MACtBP,EAAQ,CAAEK,SAEVG,aAAaC,QAAQd,EAAWe,KAAMC,KAAKC,UAAUP,IAIvD,SAASQ,EAAiBT,EAAGU,GAC3BV,EAAEW,iBACF,IAAMV,EAAOD,EAAEE,OAAOC,MACtBX,EAAcD,GACdK,EAAQ,CAAEK,SACVG,aAAaQ,QAAQF,EAAI,EAAEjB,WAASoB,aAAcN,KAAKC,UAAUP,IACjEG,aAAaC,QAAQK,EAAI,EAAEjB,WAASoB,aAAcN,KAAKC,UAAUP,IA/BnEa,qBAAU,WACRC,QAAQC,IAAI,SAEZ,IADA,IAAIzB,EAAa,GACRmB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAE3BnB,EAAW0B,KAAKxB,WAASC,MAAMwB,IAAI,CAAEZ,KAAMI,EAAGS,QAAS,KACrCf,aAAaQ,QAAQ,CAAEF,QACrBA,GAClB,EAAKU,SAAS,CAAEd,KAAMI,EAAGT,KAAM,KAInCT,EAAcD,GACdwB,QAAQC,IAAIrB,KACX,CAACA,IAqBJ,IAAM0B,EAA6B,SAACC,GAClC,OAAI3B,EAAYW,OAASgB,EAAKhB,KACrB,UAELX,EAAYW,KAAOgB,EAAKhB,KACnB,OAEA,UAKX,OACE,gCACE,sBAAKiB,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,oBAAIA,UAAU,OAAd,gEAGA,4CACa,IAEV5B,EAAY6B,eAAe/B,WAASgC,2BAA4B,UAIpElC,EAAWmC,KAAI,SAACJ,EAAMK,GACrB,OACE,qBAAKJ,UAAU,YAAf,SACE,uBAAiBK,SAAUnB,EAA3B,UACE,uBAAOc,UAAU,OAAOM,KAAK,OAA7B,SACGP,EAAKE,eAAe/B,WAASqC,eAEhC,0BAEEC,IAAKlC,EACL0B,UAAWF,EAA2BC,GACtCU,KAAK,OACLC,YAAY,kBACZC,GAAG,aACHC,SAAUpC,GANL4B,GAQP,yBACEK,KAAK,SACLT,UAAU,UACVa,QAAS,SAACpC,GAAD,OAAOS,EAAiBT,EAAG2B,IAHtC,iBAME,mBAAGJ,UAAU,0BAnBND,Y,KChERe,MARf,WACE,OACE,8BACE,cAAC,EAAD,O,MCFNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.17096914.chunk.js","sourcesContent":["// import Header from \"./components/Header\";\nimport \"../styles/Tasks.css\";\nimport { DateTime } from \"luxon\";\nimport React, { useEffect, useState, useRef } from \"react\";\n\nfunction Tasks() {\n  // set variables for useEffect args\n  const [hoursOfDay, setHoursOfDay] = useState([]);\n  const [currentTime] = useState(DateTime.now());\n  const [task, setTask] = useState();\n  const input = useRef();\n\n  // Set loop to show specific ours of the day\n  useEffect(() => {\n    console.log(\"hello\");\n    var hoursOfDay = [];\n    for (let i = 8; i < 18; i++) {\n      // Push the hours desired to display on page and what format\n      hoursOfDay.push(DateTime.now().set({ hour: i, minutes: 0 }));\n      var displayHour = localStorage.getItem({ i });\n      if (displayHour === i) {\n        this.setState({ hour: i, task: [] });\n      }\n    }\n    // setTask({ task });\n    setHoursOfDay(hoursOfDay);\n    console.log(currentTime);\n  }, [currentTime]);\n\n  // Function to handle change in task and send to localStorage\n  function handleInputChange(e) {\n    const task = e.target.value;\n    setTask({ task });\n    // console.log(hoursOfDay.hour);\n    localStorage.setItem(hoursOfDay.hour, JSON.stringify(task));\n  }\n\n  // Function to handle form when button is clicked\n  function handleFormSubmit(e, i) {\n    e.preventDefault();\n    const task = e.target.value;\n    setHoursOfDay(hoursOfDay);\n    setTask({ task });\n    localStorage.getItem(i + 8(DateTime.DATE_SIMPLE), JSON.stringify(task));\n    localStorage.setItem(i + 8(DateTime.DATE_SIMPLE), JSON.stringify(task));\n  }\n\n  // Sets change in color depending on local time\n  const determinePastPresentFuture = (each) => {\n    if (currentTime.hour === each.hour) {\n      return \"present\";\n    }\n    if (currentTime.hour < each.hour) {\n      return \"past\";\n    } else {\n      return \"future\";\n    }\n  };\n\n  // Return elements to page\n  return (\n    <div>\n      <div className=\"jumbotron\">\n        <h1 className=\"display-3\">Work Day Scheduler</h1>\n        <h2 className=\"lead\">\n          A simple calendar app for scheduling your work day\n        </h2>\n        <h3>\n          Currently:{\" \"}\n          {/* Set current time to display on page using Luxon documentation */}\n          {currentTime.toLocaleString(DateTime.DATETIME_MED_WITH_WEEKDAY)}{\" \"}\n        </h3>\n      </div>\n      {/* Map out the hours of day  */}\n      {hoursOfDay.map((each, index) => {\n        return (\n          <div className=\"container\">\n            <form key={each} onSubmit={handleFormSubmit}>\n              <label className=\"hour\" name=\"hour\">\n                {each.toLocaleString(DateTime.TIME_SIMPLE)}\n              </label>\n              <textarea\n                key={index}\n                ref={input}\n                className={determinePastPresentFuture(each)}\n                type=\"text\"\n                placeholder=\"Enter Task Here\"\n                id=\"time-block\"\n                onChange={handleInputChange}\n              ></textarea>\n              <button\n                type=\"submit\"\n                className=\"saveBtn\"\n                onClick={(e) => handleFormSubmit(e, index)}\n              >\n                Save\n                <i className=\"fas fa-save save\"></i>\n              </button>\n            </form>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Tasks;\n","import React from \"react\";\nimport Tasks from \"./components/Tasks\";\nimport \"./styles/index.css\";\nimport \"./styles/Tasks.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Tasks />\n    </div>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}